// static nested class : 다른 멤버에 접근하기
package com.eomcs.oop.ex11.b;

class B {
  // 클래스 멤버
  static int v1;
  static void m1() {}

  // 인스턴스 멤버
  int v2;
  void m2() {}

  static void test() {
    B.v1 = 100;
    B.m1();

    // test() 메서드는 같은 멤버이기 때문에 
    // 다음과 같이 클래스 이름을 생략할 수 있다.( 실무 많이 생략!!! - 붙이는 경우는 후임자에게 알려주기 위해서)
    v1 = 100;
    m1();

    // 스태틱 멤버는 this라는 빌트인 변수가 없기 때문에 
    // 인스턴스 멤버에 접근할 수 없다.
    //    v2 = 100; // 컴파일 오류!
    //    m2(); // 컴파일 오류!
  }


  public class Exam0210 {

    public static void main(String[] args) {
      B.v1=100;
      B.test();
      B.m1();
    }

  }

  //인스턴스는 주소가 항상 있어야하잖아. -> 인스턴스멤버 
  //스태틱멤버는 인스턴스멤버에 접근불가라고 이야기함  -> 스테틱메서드는 레퍼런스로 호출권장하지않음,쿠ㅡㄹ르새명  
  //스태틱메서드

  //인스턴스메서드는 인스턴스주소가 있는게 당연, 당연히 인스턴스필드도 사용불가 
  //v2 -  

  //디스는 컴파일할때 붙여준다.