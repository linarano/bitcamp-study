<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
  namespace => 인터페이스의 패키지 및 이름과 일치해야 한다.
 -->
<mapper namespace="com.eomcs.mylist.dao.BookDao">

  <!-- 테이블의 컬럼과 객체 필드를 연결한다. -->
  <resultMap type="book" id="bookMap">
    <id column="book_no" property="no"/>
    <result column="title" property="title"/>
    <result column="author" property="author"/>
    <result column="press" property="press"/>
    <result column="feed" property="feed"/>
    <result column="read_date" property="viewCount"/>
    <result column="page" property="viewCount"/>
    <result column="price" property="viewCount"/>
  </resultMap>

  <!--
    id => 인터페이스의 메서드 이름과 일치해야 한다.
   -->
  <select id="countAll" resultType="int">
    select count(*) from ml_book
  </select>
  
  <select id="findAll" resultMap="bookMap">
  select
    book_no,
    title,
    author,
    press
   from
    ml_book
  order by
    title asc
  </select>
  
    <insert id="insert" parameterType="Book">
    insert into ml_book(title,author, press, feed,read_date,page,price)
    values(#{title},#{author},#{press},#{feed},#{read_date},#{page},#{price})
  </insert>
  
  <!--
    parameterType => 메서드의 파라미터 타입 및 개수와 일치해야 한다.
   -->
  <select id="findByNo" resultMap="bookMap" parameterType="int">
    select
      book_no,
      title,
      author,
      press,
      feed,
      read_date,
      page,
      price
    from
      ml_book
    where
      book_no=#{no}
  </select>

 <!--
   SQL에 넣어 문제가 없는지 확인 
   -->

  <update id="update" parameterType="Board">
    update ml_book set
      title=#{title},
      content=#{content}
    where
      book_no=#{no}
  </update>


  <delete id="delete" parameterType="int">
    delete from ml_book
    where book_no=#{no}
  </delete>

  <update id="increaseViewCount" parameterType="int">
    update ml_book set
      view_count=view_count + 1
    where book_no=#{no}
  </update>


</mapper>

